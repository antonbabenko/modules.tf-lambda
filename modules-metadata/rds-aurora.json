{
  "allowed_cidr_blocks": {
    "default": [],
    "description": "A list of CIDR blocks which are allowed to access the database",
    "type": "list(string)"
  },
  "allowed_security_groups": {
    "default": [],
    "description": "A list of Security Group ID's to allow access to."
  },
  "apply_immediately": {
    "default": false,
    "description": "Determines whether or not any DB modifications are applied immediately, or during the maintenance window",
    "type": "bool"
  },
  "auto_minor_version_upgrade": {
    "default": true,
    "description": "Determines whether minor engine upgrades will be performed automatically in the maintenance window",
    "type": "bool"
  },
  "backtrack_window": {
    "default": 0,
    "description": "The target backtrack window, in seconds. Only available for aurora engine currently. To disable backtracking, set this value to 0. Defaults to 0. Must be between 0 and 259200 (72 hours)",
    "type": "number"
  },
  "backup_retention_period": {
    "default": 7,
    "description": "How long to keep backups for (in days)",
    "type": "number"
  },
  "copy_tags_to_snapshot": {
    "default": false,
    "description": "Copy all Cluster tags to snapshots.",
    "type": "bool"
  },
  "create_security_group": {
    "default": true,
    "description": "Whether to create security group for RDS cluster",
    "type": "bool"
  },
  "database_name": {
    "default": "",
    "description": "Name for an automatically created database on cluster creation",
    "type": "string"
  },
  "db_cluster_parameter_group_name": {
    "default": "null",
    "description": "The name of a DB Cluster parameter group to use",
    "type": "string"
  },
  "db_parameter_group_name": {
    "default": "null",
    "description": "The name of a DB parameter group to use",
    "type": "string"
  },
  "db_subnet_group_name": {
    "default": "",
    "description": "The existing subnet group name to use",
    "type": "string"
  },
  "deletion_protection": {
    "default": false,
    "description": "If the DB instance should have deletion protection enabled",
    "type": "bool"
  },
  "enabled_cloudwatch_logs_exports": {
    "default": [],
    "description": "List of log types to export to cloudwatch",
    "type": "list(string)"
  },
  "engine": {
    "default": "aurora",
    "description": "Aurora database engine type, currently aurora, aurora-mysql or aurora-postgresql",
    "type": "string"
  },
  "engine_mode": {
    "default": "provisioned",
    "description": "The database engine mode. Valid values: global, parallelquery, provisioned, serverless.",
    "type": "string"
  },
  "engine_version": {
    "default": "5.6.10a",
    "description": "Aurora database engine version.",
    "type": "string"
  },
  "final_snapshot_identifier_prefix": {
    "default": "final",
    "description": "The prefix name to use when creating a final snapshot on cluster destroy, appends a random 8 digits to name to ensure it's unique too.",
    "type": "string"
  },
  "global_cluster_identifier": {
    "default": "",
    "description": "The global cluster identifier specified on aws_rds_global_cluster",
    "type": "string"
  },
  "iam_database_authentication_enabled": {
    "default": false,
    "description": "Specifies whether IAM Database authentication should be enabled or not. Not all versions and instances are supported. Refer to the AWS documentation to see which versions are supported.",
    "type": "bool"
  },
  "iam_roles": {
    "default": [],
    "description": "A List of ARNs for the IAM roles to associate to the RDS Cluster.",
    "type": "list(string)"
  },
  "instance_type": {
    "description": "Instance type to use",
    "type": "string",
    "cloudcraft_name": "instanceType"
  },
  "kms_key_id": {
    "default": "",
    "description": "The ARN for the KMS encryption key if one is set to the cluster.",
    "type": "string"
  },
  "monitoring_interval": {
    "default": 0,
    "description": "The interval (seconds) between points when Enhanced Monitoring metrics are collected",
    "type": "number"
  },
  "name": {
    "description": "Name given resources",
    "type": "string"
  },
  "password": {
    "default": "",
    "description": "Master DB password",
    "type": "string"
  },
  "performance_insights_enabled": {
    "default": false,
    "description": "Specifies whether Performance Insights is enabled or not.",
    "type": "bool"
  },
  "performance_insights_kms_key_id": {
    "default": "",
    "description": "The ARN for the KMS key to encrypt Performance Insights data.",
    "type": "string"
  },
  "port": {
    "default": "",
    "description": "The port on which to accept connections",
    "type": "string"
  },
  "predefined_metric_type": {
    "default": "RDSReaderAverageCPUUtilization",
    "description": "The metric type to scale on. Valid values are RDSReaderAverageCPUUtilization and RDSReaderAverageDatabaseConnections."
  },
  "preferred_backup_window": {
    "default": "02:00-03:00",
    "description": "When to perform DB backups",
    "type": "string"
  },
  "preferred_maintenance_window": {
    "default": "sun:05:00-sun:06:00",
    "description": "When to perform DB maintenance",
    "type": "string"
  },
  "publicly_accessible": {
    "default": false,
    "description": "Whether the DB should have a public IP address",
    "type": "bool"
  },
  "replica_count": {
    "default": 1,
    "description": "Number of reader nodes to create.  If `replica_scale_enable` is `true`, the value of `replica_scale_min` is used instead."
  },
  "replica_scale_connections": {
    "default": 700,
    "description": "Average number of connections to trigger autoscaling at. Default value is 70% of db.r4.large's default max_connections",
    "type": "number"
  },
  "replica_scale_cpu": {
    "default": 70,
    "description": "CPU usage to trigger autoscaling at",
    "type": "number"
  },
  "replica_scale_enabled": {
    "default": false,
    "description": "Whether to enable autoscaling for RDS Aurora (MySQL) read replicas",
    "type": "bool"
  },
  "replica_scale_in_cooldown": {
    "default": 300,
    "description": "Cooldown in seconds before allowing further scaling operations after a scale in",
    "type": "number"
  },
  "replica_scale_max": {
    "default": 0,
    "description": "Maximum number of replicas to allow scaling for",
    "type": "number"
  },
  "replica_scale_min": {
    "default": 2,
    "description": "Minimum number of replicas to allow scaling for",
    "type": "number"
  },
  "replica_scale_out_cooldown": {
    "default": 300,
    "description": "Cooldown in seconds before allowing further scaling operations after a scale out",
    "type": "number"
  },
  "replication_source_identifier": {
    "default": "",
    "description": "ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica."
  },
  "scaling_configuration": {
    "default": {},
    "description": "Map of nested attributes with scaling properties. Only valid when engine_mode is set to `serverless`",
    "type": "map(string)"
  },
  "security_group_description": {
    "default": "Managed by Terraform",
    "description": "The description of the security group. If value is set to empty string it will contain cluster name in the description.",
    "type": "string"
  },
  "skip_final_snapshot": {
    "default": false,
    "description": "Should a final snapshot be created on cluster destroy",
    "type": "bool"
  },
  "snapshot_identifier": {
    "default": "",
    "description": "DB snapshot to create this database from",
    "type": "string"
  },
  "source_region": {
    "default": "",
    "description": "The source region for an encrypted replica DB cluster."
  },
  "storage_encrypted": {
    "default": true,
    "description": "Specifies whether the underlying storage layer should be encrypted",
    "type": "bool"
  },
  "subnets": {
    "default": [],
    "description": "List of subnet IDs to use",
    "type": "list(string)"
  },
  "tags": {
    "default": {},
    "description": "A map of tags to add to all resources.",
    "type": "map(string)"
  },
  "username": {
    "default": "root",
    "description": "Master DB username",
    "type": "string"
  },
  "vpc_id": {
    "description": "VPC ID",
    "type": "string"
  },
  "vpc_security_group_ids": {
    "default": [],
    "description": "List of VPC security groups to associate to the cluster in addition to the SG we create in this module",
    "type": "list(string)"
  }
}
