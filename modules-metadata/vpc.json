{
  "amazon_side_asn": {
    "default": "64512",
    "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN."
  },
  "apigw_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for API GW endpoint",
    "type": "bool"
  },
  "apigw_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for API GW  endpoint",
    "type": "list(string)"
  },
  "apigw_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for API GW endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "appmesh_envoy_management_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for AppMesh endpoint",
    "type": "bool"
  },
  "appmesh_envoy_management_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for AppMesh endpoint",
    "type": "list(string)"
  },
  "appmesh_envoy_management_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for AppMesh endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "appstream_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for AppStream endpoint",
    "type": "bool"
  },
  "appstream_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for AppStream endpoint",
    "type": "list(string)"
  },
  "appstream_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for AppStream endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "assign_ipv6_address_on_creation": {
    "default": false,
    "description": "Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
    "type": "bool"
  },
  "athena_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for Athena endpoint",
    "type": "bool"
  },
  "athena_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for Athena endpoint",
    "type": "list(string)"
  },
  "athena_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for Athena endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "azs": {
    "default": [],
    "description": "A list of availability zones in the region",
    "type": "list(string)"
  },
  "cidr": {
    "default": "0.0.0.0/0",
    "description": "The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overridden",
    "type": "string"
  },
  "cloudformation_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for Cloudformation endpoint",
    "type": "bool"
  },
  "cloudformation_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for Cloudformation endpoint",
    "type": "list(string)"
  },
  "cloudformation_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for Cloudformation endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "cloudtrail_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for CloudTrail endpoint",
    "type": "bool"
  },
  "cloudtrail_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for CloudTrail endpoint",
    "type": "list(string)"
  },
  "cloudtrail_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for CloudTrail endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "codebuild_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for Codebuild endpoint"
  },
  "codebuild_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for Codebuild endpoint"
  },
  "codebuild_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for Codebuilt endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
  },
  "codecommit_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for Codecommit endpoint"
  },
  "codecommit_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for Codecommit endpoint"
  },
  "codecommit_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for Codecommit endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
  },
  "codepipeline_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for CodePipeline endpoint",
    "type": "bool"
  },
  "codepipeline_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for CodePipeline endpoint",
    "type": "list(string)"
  },
  "codepipeline_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for CodePipeline endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "config_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for config endpoint"
  },
  "config_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for config endpoint"
  },
  "config_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for config endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
  },
  "create_database_internet_gateway_route": {
    "default": false,
    "description": "Controls if an internet gateway route for public database access should be created",
    "type": "bool"
  },
  "create_database_nat_gateway_route": {
    "default": false,
    "description": "Controls if a nat gateway route should be created to give internet access to the database subnets",
    "type": "bool"
  },
  "create_database_subnet_group": {
    "default": true,
    "description": "Controls if database subnet group should be created",
    "type": "bool"
  },
  "create_database_subnet_route_table": {
    "default": false,
    "description": "Controls if separate route table for database should be created",
    "type": "bool"
  },
  "create_elasticache_subnet_group": {
    "default": true,
    "description": "Controls if elasticache subnet group should be created",
    "type": "bool"
  },
  "create_elasticache_subnet_route_table": {
    "default": false,
    "description": "Controls if separate route table for elasticache should be created",
    "type": "bool"
  },
  "create_redshift_subnet_group": {
    "default": true,
    "description": "Controls if redshift subnet group should be created",
    "type": "bool"
  },
  "create_redshift_subnet_route_table": {
    "default": false,
    "description": "Controls if separate route table for redshift should be created",
    "type": "bool"
  },
  "create_vpc": {
    "default": true,
    "description": "Controls if VPC should be created (it affects almost all resources)",
    "type": "bool"
  },
  "database_acl_tags": {
    "default": {},
    "description": "Additional tags for the database subnets network ACL",
    "type": "map(string)"
  },
  "database_dedicated_network_acl": {
    "default": false,
    "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets",
    "type": "bool"
  },
  "database_inbound_acl_rules": {
    "default": [
      {
        "cidr_block": "0.0.0.0/0",
        "from_port": 0,
        "protocol": "-1",
        "rule_action": "allow",
        "rule_number": 100,
        "to_port": 0
      }
    ],
    "description": "Database subnets inbound network ACL rules",
    "type": "list(map(string))"
  },
  "database_outbound_acl_rules": {
    "default": [
      {
        "cidr_block": "0.0.0.0/0",
        "from_port": 0,
        "protocol": "-1",
        "rule_action": "allow",
        "rule_number": 100,
        "to_port": 0
      }
    ],
    "description": "Database subnets outbound network ACL rules",
    "type": "list(map(string))"
  },
  "database_route_table_tags": {
    "default": {},
    "description": "Additional tags for the database route tables",
    "type": "map(string)"
  },
  "database_subnet_assign_ipv6_address_on_creation": {
    "default": "null",
    "description": "Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
    "type": "bool"
  },
  "database_subnet_group_tags": {
    "default": {},
    "description": "Additional tags for the database subnet group",
    "type": "map(string)"
  },
  "database_subnet_ipv6_prefixes": {
    "default": [],
    "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
    "type": "list"
  },
  "database_subnet_suffix": {
    "default": "db",
    "description": "Suffix to append to database subnets name",
    "type": "string"
  },
  "database_subnet_tags": {
    "default": {},
    "description": "Additional tags for the database subnets",
    "type": "map(string)"
  },
  "database_subnets": {
    "default": [],
    "description": "A list of database subnets",
    "type": "list(string)"
  },
  "default_network_acl_egress": {
    "default": [
      {
        "action": "allow",
        "cidr_block": "0.0.0.0/0",
        "from_port": 0,
        "protocol": "-1",
        "rule_no": 100,
        "to_port": 0
      },
      {
        "action": "allow",
        "from_port": 0,
        "ipv6_cidr_block": "::/0",
        "protocol": "-1",
        "rule_no": 101,
        "to_port": 0
      }
    ],
    "description": "List of maps of egress rules to set on the Default Network ACL",
    "type": "list(map(string))"
  },
  "default_network_acl_ingress": {
    "default": [
      {
        "action": "allow",
        "cidr_block": "0.0.0.0/0",
        "from_port": 0,
        "protocol": "-1",
        "rule_no": 100,
        "to_port": 0
      },
      {
        "action": "allow",
        "from_port": 0,
        "ipv6_cidr_block": "::/0",
        "protocol": "-1",
        "rule_no": 101,
        "to_port": 0
      }
    ],
    "description": "List of maps of ingress rules to set on the Default Network ACL",
    "type": "list(map(string))"
  },
  "default_network_acl_name": {
    "default": "",
    "description": "Name to be used on the Default Network ACL",
    "type": "string"
  },
  "default_network_acl_tags": {
    "default": {},
    "description": "Additional tags for the Default Network ACL",
    "type": "map(string)"
  },
  "default_vpc_enable_classiclink": {
    "default": false,
    "description": "Should be true to enable ClassicLink in the Default VPC",
    "type": "bool"
  },
  "default_vpc_enable_dns_hostnames": {
    "default": false,
    "description": "Should be true to enable DNS hostnames in the Default VPC",
    "type": "bool"
  },
  "default_vpc_enable_dns_support": {
    "default": true,
    "description": "Should be true to enable DNS support in the Default VPC",
    "type": "bool"
  },
  "default_vpc_name": {
    "default": "",
    "description": "Name to be used on the Default VPC",
    "type": "string"
  },
  "default_vpc_tags": {
    "default": {},
    "description": "Additional tags for the Default VPC",
    "type": "map(string)"
  },
  "dhcp_options_domain_name": {
    "default": "",
    "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)",
    "type": "string"
  },
  "dhcp_options_domain_name_servers": {
    "default": [
      "AmazonProvidedDNS"
    ],
    "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)",
    "type": "list(string)"
  },
  "dhcp_options_netbios_name_servers": {
    "default": [],
    "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)",
    "type": "list(string)"
  },
  "dhcp_options_netbios_node_type": {
    "default": "",
    "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)",
    "type": "string"
  },
  "dhcp_options_ntp_servers": {
    "default": [],
    "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)",
    "type": "list(string)"
  },
  "dhcp_options_tags": {
    "default": {},
    "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)",
    "type": "map(string)"
  },
  "ec2_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for EC2 endpoint",
    "type": "bool"
  },
  "ec2_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for EC2 endpoint",
    "type": "list(string)"
  },
  "ec2_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for EC2 endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "ec2messages_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for EC2MESSAGES endpoint",
    "type": "bool"
  },
  "ec2messages_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for EC2MESSAGES endpoint",
    "type": "list(string)"
  },
  "ec2messages_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for EC2MESSAGES endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "ecr_api_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for ECR API endpoint",
    "type": "bool"
  },
  "ecr_api_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for ECR API endpoint",
    "type": "list(string)"
  },
  "ecr_api_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for ECR api endpoint. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "ecr_dkr_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for ECR DKR endpoint",
    "type": "bool"
  },
  "ecr_dkr_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for ECR DKR endpoint",
    "type": "list(string)"
  },
  "ecr_dkr_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for ECR dkr endpoint. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "ecs_agent_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for ECS Agent endpoint",
    "type": "bool"
  },
  "ecs_agent_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for ECS Agent endpoint",
    "type": "list(string)"
  },
  "ecs_agent_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for ECS Agent endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "ecs_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for ECS endpoint",
    "type": "bool"
  },
  "ecs_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for ECS endpoint",
    "type": "list(string)"
  },
  "ecs_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for ECS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "ecs_telemetry_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for ECS Telemetry endpoint",
    "type": "bool"
  },
  "ecs_telemetry_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for ECS Telemetry endpoint",
    "type": "list(string)"
  },
  "ecs_telemetry_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for ECS Telemetry endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "elasticache_acl_tags": {
    "default": {},
    "description": "Additional tags for the elasticache subnets network ACL",
    "type": "map(string)"
  },
  "elasticache_dedicated_network_acl": {
    "default": false,
    "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets",
    "type": "bool"
  },
  "elasticache_inbound_acl_rules": {
    "default": [
      {
        "cidr_block": "0.0.0.0/0",
        "from_port": 0,
        "protocol": "-1",
        "rule_action": "allow",
        "rule_number": 100,
        "to_port": 0
      }
    ],
    "description": "Elasticache subnets inbound network ACL rules",
    "type": "list(map(string))"
  },
  "elasticache_outbound_acl_rules": {
    "default": [
      {
        "cidr_block": "0.0.0.0/0",
        "from_port": 0,
        "protocol": "-1",
        "rule_action": "allow",
        "rule_number": 100,
        "to_port": 0
      }
    ],
    "description": "Elasticache subnets outbound network ACL rules",
    "type": "list(map(string))"
  },
  "elasticache_route_table_tags": {
    "default": {},
    "description": "Additional tags for the elasticache route tables",
    "type": "map(string)"
  },
  "elasticache_subnet_assign_ipv6_address_on_creation": {
    "default": "null",
    "description": "Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
    "type": "bool"
  },
  "elasticache_subnet_ipv6_prefixes": {
    "default": [],
    "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
    "type": "list"
  },
  "elasticache_subnet_suffix": {
    "default": "elasticache",
    "description": "Suffix to append to elasticache subnets name",
    "type": "string"
  },
  "elasticache_subnet_tags": {
    "default": {},
    "description": "Additional tags for the elasticache subnets",
    "type": "map(string)"
  },
  "elasticache_subnets": {
    "default": [],
    "description": "A list of elasticache subnets",
    "type": "list(string)"
  },
  "elasticloadbalancing_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for Elastic Load Balancing endpoint",
    "type": "bool"
  },
  "elasticloadbalancing_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for Elastic Load Balancing endpoint",
    "type": "list(string)"
  },
  "elasticloadbalancing_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for Elastic Load Balancing endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "enable_apigw_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision an api gateway endpoint to the VPC",
    "type": "bool"
  },
  "enable_appmesh_envoy_management_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a AppMesh endpoint to the VPC",
    "type": "bool"
  },
  "enable_appstream_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a AppStream endpoint to the VPC",
    "type": "bool"
  },
  "enable_athena_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a Athena endpoint to the VPC",
    "type": "bool"
  },
  "enable_classiclink": {
    "default": "null",
    "description": "Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic.",
    "type": "bool"
  },
  "enable_classiclink_dns_support": {
    "default": "null",
    "description": "Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic.",
    "type": "bool"
  },
  "enable_cloudformation_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a Cloudformation endpoint to the VPC",
    "type": "bool"
  },
  "enable_cloudtrail_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a CloudTrail endpoint to the VPC",
    "type": "bool"
  },
  "enable_codebuild_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision an Codebuild endpoint to the VPC"
  },
  "enable_codecommit_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision an Codecommit endpoint to the VPC"
  },
  "enable_codepipeline_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a CodePipeline endpoint to the VPC",
    "type": "bool"
  },
  "enable_config_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision an config endpoint to the VPC"
  },
  "enable_dhcp_options": {
    "default": false,
    "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type",
    "type": "bool"
  },
  "enable_dns_hostnames": {
    "default": false,
    "description": "Should be true to enable DNS hostnames in the VPC",
    "type": "bool"
  },
  "enable_dns_support": {
    "default": true,
    "description": "Should be true to enable DNS support in the VPC",
    "type": "bool"
  },
  "enable_dynamodb_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a DynamoDB endpoint to the VPC",
    "type": "bool"
  },
  "enable_ec2_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision an EC2 endpoint to the VPC",
    "type": "bool"
  },
  "enable_ec2messages_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision an EC2MESSAGES endpoint to the VPC",
    "type": "bool"
  },
  "enable_ecr_api_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision an ecr api endpoint to the VPC",
    "type": "bool"
  },
  "enable_ecr_dkr_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision an ecr dkr endpoint to the VPC",
    "type": "bool"
  },
  "enable_ecs_agent_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a ECS Agent endpoint to the VPC",
    "type": "bool"
  },
  "enable_ecs_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a ECS endpoint to the VPC",
    "type": "bool"
  },
  "enable_ecs_telemetry_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a ECS Telemetry endpoint to the VPC",
    "type": "bool"
  },
  "enable_elasticloadbalancing_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a Elastic Load Balancing endpoint to the VPC",
    "type": "bool"
  },
  "enable_events_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a CloudWatch Events endpoint to the VPC",
    "type": "bool"
  },
  "enable_git_codecommit_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision an Git Codecommit endpoint to the VPC"
  },
  "enable_glue_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a Glue endpoint to the VPC",
    "type": "bool"
  },
  "enable_ipv6": {
    "default": false,
    "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.",
    "type": "bool"
  },
  "enable_kinesis_firehose_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a Kinesis Firehose endpoint to the VPC",
    "type": "bool"
  },
  "enable_kinesis_streams_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a Kinesis Streams endpoint to the VPC",
    "type": "bool"
  },
  "enable_kms_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a KMS endpoint to the VPC",
    "type": "bool"
  },
  "enable_logs_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a CloudWatch Logs endpoint to the VPC",
    "type": "bool"
  },
  "enable_monitoring_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a CloudWatch Monitoring endpoint to the VPC",
    "type": "bool"
  },
  "enable_nat_gateway": {
    "default": false,
    "description": "Should be true if you want to provision NAT Gateways for each of your private networks",
    "type": "bool"
  },
  "enable_public_redshift": {
    "default": false,
    "description": "Controls if redshift should have public routing table",
    "type": "bool"
  },
  "enable_rekognition_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a Rekognition endpoint to the VPC",
    "type": "bool"
  },
  "enable_s3_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision an S3 endpoint to the VPC",
    "type": "bool"
  },
  "enable_sagemaker_api_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a SageMaker API endpoint to the VPC",
    "type": "bool"
  },
  "enable_sagemaker_notebook_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a Sagemaker Notebook endpoint to the VPC",
    "type": "bool"
  },
  "enable_sagemaker_runtime_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a SageMaker Runtime endpoint to the VPC",
    "type": "bool"
  },
  "enable_secretsmanager_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision an Secrets Manager endpoint to the VPC",
    "type": "bool"
  },
  "enable_servicecatalog_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a Service Catalog endpoint to the VPC",
    "type": "bool"
  },
  "enable_sns_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a SNS endpoint to the VPC",
    "type": "bool"
  },
  "enable_sqs_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision an SQS endpoint to the VPC"
  },
  "enable_ssm_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision an SSM endpoint to the VPC",
    "type": "bool"
  },
  "enable_ssmmessages_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a SSMMESSAGES endpoint to the VPC",
    "type": "bool"
  },
  "enable_storagegateway_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a Storage Gateway endpoint to the VPC",
    "type": "bool"
  },
  "enable_sts_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a STS endpoint to the VPC",
    "type": "bool"
  },
  "enable_transfer_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a Transfer endpoint tothe VPC",
    "type": "bool"
  },
  "enable_transferserver_endpoint": {
    "default": false,
    "description": "Should be true if you want to provision a Transer Server endpoint to the VPC",
    "type": "bool"
  },
  "enable_vpn_gateway": {
    "default": false,
    "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC",
    "type": "bool"
  },
  "events_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for CloudWatch Events endpoint",
    "type": "bool"
  },
  "events_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for CloudWatch Events endpoint",
    "type": "list(string)"
  },
  "events_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for CloudWatch Events endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "external_nat_ip_ids": {
    "default": [],
    "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)",
    "type": "list(string)"
  },
  "git_codecommit_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for Git Codecommit endpoint"
  },
  "git_codecommit_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for Git Codecommit endpoint"
  },
  "git_codecommit_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for Git Codecommit endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
  },
  "glue_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for Glue endpoint",
    "type": "bool"
  },
  "glue_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for Glue endpoint",
    "type": "list(string)"
  },
  "glue_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for Glue endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "igw_tags": {
    "default": {},
    "description": "Additional tags for the internet gateway",
    "type": "map(string)"
  },
  "instance_tenancy": {
    "default": "default",
    "description": "A tenancy option for instances launched into the VPC",
    "type": "string"
  },
  "intra_acl_tags": {
    "default": {},
    "description": "Additional tags for the intra subnets network ACL",
    "type": "map(string)"
  },
  "intra_dedicated_network_acl": {
    "default": false,
    "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets",
    "type": "bool"
  },
  "intra_inbound_acl_rules": {
    "default": [
      {
        "cidr_block": "0.0.0.0/0",
        "from_port": 0,
        "protocol": "-1",
        "rule_action": "allow",
        "rule_number": 100,
        "to_port": 0
      }
    ],
    "description": "Intra subnets inbound network ACLs",
    "type": "list(map(string))"
  },
  "intra_outbound_acl_rules": {
    "default": [
      {
        "cidr_block": "0.0.0.0/0",
        "from_port": 0,
        "protocol": "-1",
        "rule_action": "allow",
        "rule_number": 100,
        "to_port": 0
      }
    ],
    "description": "Intra subnets outbound network ACLs",
    "type": "list(map(string))"
  },
  "intra_route_table_tags": {
    "default": {},
    "description": "Additional tags for the intra route tables",
    "type": "map(string)"
  },
  "intra_subnet_assign_ipv6_address_on_creation": {
    "default": "null",
    "description": "Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
    "type": "bool"
  },
  "intra_subnet_ipv6_prefixes": {
    "default": [],
    "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
    "type": "list"
  },
  "intra_subnet_suffix": {
    "default": "intra",
    "description": "Suffix to append to intra subnets name",
    "type": "string"
  },
  "intra_subnet_tags": {
    "default": {},
    "description": "Additional tags for the intra subnets",
    "type": "map(string)"
  },
  "intra_subnets": {
    "default": [],
    "description": "A list of intra subnets",
    "type": "list(string)"
  },
  "kinesis_firehose_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for Kinesis Firehose endpoint",
    "type": "bool"
  },
  "kinesis_firehose_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for Kinesis Firehose endpoint",
    "type": "list(string)"
  },
  "kinesis_firehose_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for Kinesis Firehose endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "kinesis_streams_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for Kinesis Streams endpoint",
    "type": "bool"
  },
  "kinesis_streams_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for Kinesis Streams endpoint",
    "type": "list(string)"
  },
  "kinesis_streams_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for Kinesis Streams endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "kms_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for KMS endpoint",
    "type": "bool"
  },
  "kms_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for KMS endpoint",
    "type": "list(string)"
  },
  "kms_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for KMS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "logs_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for CloudWatch Logs endpoint",
    "type": "bool"
  },
  "logs_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for CloudWatch Logs endpoint",
    "type": "list(string)"
  },
  "logs_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for CloudWatch Logs endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "manage_default_network_acl": {
    "default": false,
    "description": "Should be true to adopt and manage Default Network ACL",
    "type": "bool"
  },
  "manage_default_vpc": {
    "default": false,
    "description": "Should be true to adopt and manage Default VPC",
    "type": "bool"
  },
  "map_public_ip_on_launch": {
    "default": true,
    "description": "Should be false if you do not want to auto-assign public IP on launch",
    "type": "bool"
  },
  "monitoring_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for CloudWatch Monitoring endpoint",
    "type": "bool"
  },
  "monitoring_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for CloudWatch Monitoring endpoint",
    "type": "list(string)"
  },
  "monitoring_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for CloudWatch Monitoring endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "name": {
    "default": "",
    "description": "Name to be used on all the resources as identifier",
    "type": "string"
  },
  "nat_eip_tags": {
    "default": {},
    "description": "Additional tags for the NAT EIP",
    "type": "map(string)"
  },
  "nat_gateway_tags": {
    "default": {},
    "description": "Additional tags for the NAT gateways",
    "type": "map(string)"
  },
  "one_nat_gateway_per_az": {
    "default": false,
    "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`.",
    "type": "bool"
  },
  "private_acl_tags": {
    "default": {},
    "description": "Additional tags for the private subnets network ACL",
    "type": "map(string)"
  },
  "private_dedicated_network_acl": {
    "default": false,
    "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets",
    "type": "bool"
  },
  "private_inbound_acl_rules": {
    "default": [
      {
        "cidr_block": "0.0.0.0/0",
        "from_port": 0,
        "protocol": "-1",
        "rule_action": "allow",
        "rule_number": 100,
        "to_port": 0
      }
    ],
    "description": "Private subnets inbound network ACLs",
    "type": "list(map(string))"
  },
  "private_outbound_acl_rules": {
    "default": [
      {
        "cidr_block": "0.0.0.0/0",
        "from_port": 0,
        "protocol": "-1",
        "rule_action": "allow",
        "rule_number": 100,
        "to_port": 0
      }
    ],
    "description": "Private subnets outbound network ACLs",
    "type": "list(map(string))"
  },
  "private_route_table_tags": {
    "default": {},
    "description": "Additional tags for the private route tables",
    "type": "map(string)"
  },
  "private_subnet_assign_ipv6_address_on_creation": {
    "default": "null",
    "description": "Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
    "type": "bool"
  },
  "private_subnet_ipv6_prefixes": {
    "default": [],
    "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
    "type": "list"
  },
  "private_subnet_suffix": {
    "default": "private",
    "description": "Suffix to append to private subnets name",
    "type": "string"
  },
  "private_subnet_tags": {
    "default": {},
    "description": "Additional tags for the private subnets",
    "type": "map(string)"
  },
  "private_subnets": {
    "default": [],
    "description": "A list of private subnets inside the VPC",
    "type": "list(string)"
  },
  "propagate_private_route_tables_vgw": {
    "default": false,
    "description": "Should be true if you want route table propagation",
    "type": "bool"
  },
  "propagate_public_route_tables_vgw": {
    "default": false,
    "description": "Should be true if you want route table propagation",
    "type": "bool"
  },
  "public_acl_tags": {
    "default": {},
    "description": "Additional tags for the public subnets network ACL",
    "type": "map(string)"
  },
  "public_dedicated_network_acl": {
    "default": false,
    "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets",
    "type": "bool"
  },
  "public_inbound_acl_rules": {
    "default": [
      {
        "cidr_block": "0.0.0.0/0",
        "from_port": 0,
        "protocol": "-1",
        "rule_action": "allow",
        "rule_number": 100,
        "to_port": 0
      }
    ],
    "description": "Public subnets inbound network ACLs",
    "type": "list(map(string))"
  },
  "public_outbound_acl_rules": {
    "default": [
      {
        "cidr_block": "0.0.0.0/0",
        "from_port": 0,
        "protocol": "-1",
        "rule_action": "allow",
        "rule_number": 100,
        "to_port": 0
      }
    ],
    "description": "Public subnets outbound network ACLs",
    "type": "list(map(string))"
  },
  "public_route_table_tags": {
    "default": {},
    "description": "Additional tags for the public route tables",
    "type": "map(string)"
  },
  "public_subnet_assign_ipv6_address_on_creation": {
    "default": "null",
    "description": "Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
    "type": "bool"
  },
  "public_subnet_ipv6_prefixes": {
    "default": [],
    "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
    "type": "list"
  },
  "public_subnet_suffix": {
    "default": "public",
    "description": "Suffix to append to public subnets name",
    "type": "string"
  },
  "public_subnet_tags": {
    "default": {},
    "description": "Additional tags for the public subnets",
    "type": "map(string)"
  },
  "public_subnets": {
    "default": [],
    "description": "A list of public subnets inside the VPC",
    "type": "list(string)"
  },
  "redshift_acl_tags": {
    "default": {},
    "description": "Additional tags for the redshift subnets network ACL",
    "type": "map(string)"
  },
  "redshift_dedicated_network_acl": {
    "default": false,
    "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets",
    "type": "bool"
  },
  "redshift_inbound_acl_rules": {
    "default": [
      {
        "cidr_block": "0.0.0.0/0",
        "from_port": 0,
        "protocol": "-1",
        "rule_action": "allow",
        "rule_number": 100,
        "to_port": 0
      }
    ],
    "description": "Redshift subnets inbound network ACL rules",
    "type": "list(map(string))"
  },
  "redshift_outbound_acl_rules": {
    "default": [
      {
        "cidr_block": "0.0.0.0/0",
        "from_port": 0,
        "protocol": "-1",
        "rule_action": "allow",
        "rule_number": 100,
        "to_port": 0
      }
    ],
    "description": "Redshift subnets outbound network ACL rules",
    "type": "list(map(string))"
  },
  "redshift_route_table_tags": {
    "default": {},
    "description": "Additional tags for the redshift route tables",
    "type": "map(string)"
  },
  "redshift_subnet_assign_ipv6_address_on_creation": {
    "default": "null",
    "description": "Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
    "type": "bool"
  },
  "redshift_subnet_group_tags": {
    "default": {},
    "description": "Additional tags for the redshift subnet group",
    "type": "map(string)"
  },
  "redshift_subnet_ipv6_prefixes": {
    "default": [],
    "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
    "type": "list"
  },
  "redshift_subnet_suffix": {
    "default": "redshift",
    "description": "Suffix to append to redshift subnets name",
    "type": "string"
  },
  "redshift_subnet_tags": {
    "default": {},
    "description": "Additional tags for the redshift subnets",
    "type": "map(string)"
  },
  "redshift_subnets": {
    "default": [],
    "description": "A list of redshift subnets",
    "type": "list(string)"
  },
  "rekognition_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for Rekognition endpoint",
    "type": "bool"
  },
  "rekognition_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for Rekognition endpoint",
    "type": "list(string)"
  },
  "rekognition_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for Rekognition endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "reuse_nat_ips": {
    "default": false,
    "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable",
    "type": "bool"
  },
  "sagemaker_api_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for SageMaker API endpoint",
    "type": "bool"
  },
  "sagemaker_api_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for SageMaker API endpoint",
    "type": "list(string)"
  },
  "sagemaker_api_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for SageMaker API endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "sagemaker_notebook_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for Sagemaker Notebook endpoint",
    "type": "bool"
  },
  "sagemaker_notebook_endpoint_region": {
    "default": "",
    "description": "Region to use for Sagemaker Notebook endpoint",
    "type": "string"
  },
  "sagemaker_notebook_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for Sagemaker Notebook endpoint",
    "type": "list(string)"
  },
  "sagemaker_notebook_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for Sagemaker Notebook endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "sagemaker_runtime_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for SageMaker Runtime endpoint",
    "type": "bool"
  },
  "sagemaker_runtime_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for SageMaker Runtime endpoint",
    "type": "list(string)"
  },
  "sagemaker_runtime_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for SageMaker Runtime endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "secondary_cidr_blocks": {
    "default": [],
    "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool",
    "type": "list(string)"
  },
  "secretsmanager_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for Secrets Manager endpoint",
    "type": "bool"
  },
  "secretsmanager_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for Secrets Manager endpoint",
    "type": "list(string)"
  },
  "secretsmanager_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for Secrets Manager endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "servicecatalog_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for Service Catalog endpoint",
    "type": "bool"
  },
  "servicecatalog_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for Service Catalog endpoint",
    "type": "list(string)"
  },
  "servicecatalog_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for Service Catalog endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "single_nat_gateway": {
    "default": false,
    "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks",
    "type": "bool"
  },
  "sns_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for SNS endpoint",
    "type": "bool"
  },
  "sns_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for SNS endpoint",
    "type": "list(string)"
  },
  "sns_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for SNS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "sqs_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for SQS endpoint"
  },
  "sqs_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for SQS endpoint"
  },
  "sqs_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for SQS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
  },
  "ssm_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for SSM endpoint",
    "type": "bool"
  },
  "ssm_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for SSM endpoint",
    "type": "list(string)"
  },
  "ssm_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for SSM endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "ssmmessages_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for SSMMESSAGES endpoint",
    "type": "bool"
  },
  "ssmmessages_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for SSMMESSAGES endpoint",
    "type": "list(string)"
  },
  "ssmmessages_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for SSMMESSAGES endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "storagegateway_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for Storage Gateway endpoint",
    "type": "bool"
  },
  "storagegateway_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for Storage Gateway endpoint",
    "type": "list(string)"
  },
  "storagegateway_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for Storage Gateway endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "sts_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for STS endpoint",
    "type": "bool"
  },
  "sts_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for STS endpoint",
    "type": "list(string)"
  },
  "sts_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for STS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "tags": {
    "default": {},
    "description": "A map of tags to add to all resources",
    "type": "map(string)"
  },
  "transfer_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for Transfer endpoint",
    "type": "bool"
  },
  "transfer_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for Transfer endpoint",
    "type": "list(string)"
  },
  "transfer_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for Transfer endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
    "type": "list(string)"
  },
  "transferserver_endpoint_private_dns_enabled": {
    "default": false,
    "description": "Whether or not to associate a private hosted zone with the specified VPC for Transfer Server endpoint",
    "type": "bool"
  },
  "transferserver_endpoint_security_group_ids": {
    "default": [],
    "description": "The ID of one or more security groups to associate with the network interface for Transfer Server endpoint",
    "type": "list(string)"
  },
  "transferserver_endpoint_subnet_ids": {
    "default": [],
    "description": "The ID of one or more subnets in which to create a network interface for Transfer Server endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
    "type": "list(string)"
  },
  "vpc_endpoint_tags": {
    "default": {},
    "description": "Additional tags for the VPC Endpoints",
    "type": "map(string)"
  },
  "vpc_tags": {
    "default": {},
    "description": "Additional tags for the VPC",
    "type": "map(string)"
  },
  "vpn_gateway_id": {
    "default": "",
    "description": "ID of VPN Gateway to attach to the VPC"
  },
  "vpn_gateway_tags": {
    "default": {},
    "description": "Additional tags for the VPN gateway",
    "type": "map(string)"
  }
}
