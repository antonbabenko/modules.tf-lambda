service: modules-tf

#frameworkVersion: ">=1.26.0 <2.0.0"
frameworkVersion: "1.51.0" # see KNOWN_ISSUES.md

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: eu-west-1
  tracing: true
  timeout: 30
  environment:
    S3_BUCKET: "dl.modules.tf"
    S3_DIR: ${self:custom.stage}
  iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - "s3:*" # "s3:PutObject" plus something more plus stage name
       Resource:
         - "arn:aws:s3:::${self:provider.environment.S3_BUCKET}/${self:provider.environment.S3_DIR}/*"
         - "arn:aws:s3:::${self:provider.environment.S3_BUCKET}/${self:provider.environment.S3_DIR}/"
    - Effect: "Allow" # xray permissions (required)
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"

functions:
  generate-cloudcraft:
    name: ${self:service}-${self:custom.stage}-generate-cloudcraft
    handler: handler.handler
    description: Generate all from Cloudcraft URL (stage=${self:custom.stage})
    memorySize: 1536
    events:
      - http:
          method: get
          path: /
          cors: true
      - http:
          method: post
          path: /
          cors: true

  generate-cloudcraft-alb:
    name: ${self:service}-${self:custom.stage}-generate-cloudcraft
    handler: handler.handler
    description: Generate all from Cloudcraft URL (stage=${self:custom.stage})
    memorySize: 1536
    events:
      - alb:
          listenerArn: arn:aws:elasticloadbalancing:eu-west-1:307990089504:listener/app/modulestf/40114c366ec482df/e781b15a76f7bff5
          priority: 1
          conditions:
            path: /.*
            method:
              - GET
              - POST
              - OPTIONS

plugins:
  - serverless-domain-manager
  - serverless-python-requirements
  - serverless-plugin-tracing

custom:
  stage: ${opt:stage, self:provider.stage}
  domains:
    prod: lambda.modules.tf
    dev: dev-lambda.modules.tf

  customDomain:
    domainName: "${self:custom.domains.${self:custom.stage}}"
    basePath: ""
    stage: "${self:custom.stage}"
    certificateName: "*.modules.tf"
    createRoute53Record: true

  pythonRequirements:
    fileName: requirements-lambda.txt # requirements-lambda.txt does not have heavy libraries like matplotlib, python-lambda-local which are required for debug locally
    dockerizePip: true
    useDownloadCache: true
    useStaticCache: true

package:
  exclude:
    - "input/**"
    - "output/**"
    - "test_fixtures/**"
    - "node_modules/**"
    - ".requirements-cache/**"
