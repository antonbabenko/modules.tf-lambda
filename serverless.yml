service: modules-tf

frameworkVersion: ">=1.65.0 <2.0.0"

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: eu-west-1
  tracing: true
  timeout: 30
#  profile: modules-deploy
  environment:
    S3_BUCKET: ${ssm:/modulestf/${self:custom.stage}/dl_bucket_id}
    S3_DIR: ${self:custom.stage}
    thundra_apiKey: ${ssm:/modulestf/${self:custom.stage}/thundra_api_key~true}
  alb:
    targetGroupPrefix: modulestf-
  iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - "s3:*" # "s3:PutObject" plus something more plus stage name
       Resource:
         - "arn:aws:s3:::${self:provider.environment.S3_BUCKET}/${self:provider.environment.S3_DIR}/*"
         - "arn:aws:s3:::${self:provider.environment.S3_BUCKET}/${self:provider.environment.S3_DIR}/"
    - Effect: "Allow" # xray permissions (required)
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"

functions:
  generate-cloudcraft:
    name: ${self:service}-${self:custom.stage}-generate-cloudcraft
    handler: handler.handler
    description: Generate all from Cloudcraft URL (stage=${self:custom.stage})
    memorySize: 1536
    package: {}
    events:
      - alb:
          listenerArn: ${ssm:/modulestf/${self:custom.stage}/alb_listener_arn}
          priority: ${self:custom.alb_priority.${self:custom.stage}}
          cors: true
          conditions:
            host: ${self:custom.domains.${self:custom.stage}}
            path: "*"
            method:
              - GET
              - POST
              - OPTIONS

#  validate-cloudcraft:
#    name: ${self:service}-${self:custom.stage}-validate-cloudcraft
#    handler: handler.handler
#    description: Validate inputs from Cloudcraft (stage=${self:custom.stage})
#    memorySize: 1536
#    package: {}
#    events:
#      - alb:
#          # ${ssm:/modulestf/${self:custom.stage}/alb_listener_arn}
#          listenerArn: ${ssm:/modulestf/${self:custom.stage}/alb_listener_arn}
#          priority: 1
#          conditions:
#            path: /validate
#            method:
#              - GET
#              - POST
#              - OPTIONS

plugins:
  - serverless-python-requirements
  - serverless-plugin-tracing
  - serverless-plugin-thundra

custom:
  stage: ${opt:stage, self:provider.stage}

  thundra:
    apiKey: ${ssm:/modulestf/${self:custom.stage}/thundra_api_key~true}

  domains:
    prod: ${ssm:/modulestf/prod/prod_route53_record_fqdn} # lambda.modules.tf
    dev: ${ssm:/modulestf/dev/dev_route53_record_fqdn}    # dev-lambda.modules.tf

  alb_priority:
    prod: 20
    dev: 10

  pythonRequirements:
    fileName: requirements-lambda.txt # requirements-lambda.txt does not have heavy libraries like matplotlib, python-lambda-local which are required for debug locally
    dockerizePip: true
    useDownloadCache: true
    useStaticCache: true

package:
  exclude:
    - "input/**"
    - "output/**"
    - "test_fixtures/**"
    - "node_modules/**"
    - ".requirements-cache/**"
